-- File auto generated by purescript-bridge! --
module GenerateClient.Types where

import Data.Lens (Lens', Prism', lens, prism')
import Data.Maybe (Maybe, Maybe(..))
import Data.Time.Clock.UTC (UTCTime)
import Net.Types (IPv4)
import Prim (Array, Boolean, String)

import Prelude
import Data.Generic (class Generic)

newtype EmailProperties =
    EmailProperties {
      subscribed :: Boolean
    }

derive instance genericEmailProperties :: Generic EmailProperties

--------------------------------------------------------------------------------
_EmailProperties :: Prism' EmailProperties { subscribed :: Boolean}
_EmailProperties = prism' EmailProperties f
  where
    f (EmailProperties r) = Just r


--------------------------------------------------------------------------------
newtype Token =
    Token {
      unToken :: String
    }

derive instance genericToken :: Generic Token

--------------------------------------------------------------------------------
_Token :: Prism' Token { unToken :: String}
_Token = prism' Token f
  where
    f (Token r) = Just r


--------------------------------------------------------------------------------
newtype UriEmail =
    UriEmail {
      unUriEmail :: String
    }

derive instance genericUriEmail :: Generic UriEmail

--------------------------------------------------------------------------------
_UriEmail :: Prism' UriEmail { unUriEmail :: String}
_UriEmail = prism' UriEmail f
  where
    f (UriEmail r) = Just r


--------------------------------------------------------------------------------
newtype ClickEventData =
    ClickEventData {
      cedSubscribed :: Boolean
    , cedTime :: UTCTime
    , cedIp :: Maybe IPv4
    , cedUserAgent :: Maybe String
    }

derive instance genericClickEventData :: Generic ClickEventData

--------------------------------------------------------------------------------
_ClickEventData :: Prism' ClickEventData { cedSubscribed :: Boolean, cedTime :: UTCTime, cedIp :: Maybe IPv4, cedUserAgent :: Maybe String}
_ClickEventData = prism' ClickEventData f
  where
    f (ClickEventData r) = Just r


--------------------------------------------------------------------------------
newtype LinkData =
    LinkData {
      ldEmail :: String
    , ldOrganization :: String
    , ldToken :: Token
    , ldUnsubsciptionLink :: String
    , ldSubscriptionLink :: String
    , ldCreatedAt :: UTCTime
    , ldClickEvents :: Array ClickEventData
    }

derive instance genericLinkData :: Generic LinkData

--------------------------------------------------------------------------------
_LinkData :: Prism' LinkData { ldEmail :: String, ldOrganization :: String, ldToken :: Token, ldUnsubsciptionLink :: String, ldSubscriptionLink :: String, ldCreatedAt :: UTCTime, ldClickEvents :: Array ClickEventData}
_LinkData = prism' LinkData f
  where
    f (LinkData r) = Just r


--------------------------------------------------------------------------------
