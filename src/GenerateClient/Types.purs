-- File auto generated by purescript-bridge! --
module GenerateClient.Types where

import Data.Lens (Lens', Prism', lens, prism')
import Data.Maybe (Maybe, Maybe(..))
import Prim (Array, Boolean, Int, String)

import Prelude
import Data.Generic (class Generic)

newtype EmailProperties =
    EmailProperties {
      subscribed :: Boolean
    }

derive instance genericEmailProperties :: Generic EmailProperties

--------------------------------------------------------------------------------
_EmailProperties :: Prism' EmailProperties { subscribed :: Boolean}
_EmailProperties = prism' EmailProperties f
  where
    f (EmailProperties r) = Just r


--------------------------------------------------------------------------------
newtype Token =
    Token {
      unToken :: String
    }

derive instance genericToken :: Generic Token

--------------------------------------------------------------------------------
_Token :: Prism' Token { unToken :: String}
_Token = prism' Token f
  where
    f (Token r) = Just r


--------------------------------------------------------------------------------
newtype UriEmail =
    UriEmail {
      unUriEmail :: String
    }

derive instance genericUriEmail :: Generic UriEmail

--------------------------------------------------------------------------------
_UriEmail :: Prism' UriEmail { unUriEmail :: String}
_UriEmail = prism' UriEmail f
  where
    f (UriEmail r) = Just r


--------------------------------------------------------------------------------
newtype ClickEventData =
    ClickEventData {
      subscribed :: Boolean
    , time :: String
    , ip :: Maybe Int
    , user_agent :: Maybe String
    }

derive instance genericClickEventData :: Generic ClickEventData

--------------------------------------------------------------------------------
_ClickEventData :: Prism' ClickEventData { subscribed :: Boolean, time :: String, ip :: Maybe Int, user_agent :: Maybe String}
_ClickEventData = prism' ClickEventData f
  where
    f (ClickEventData r) = Just r


--------------------------------------------------------------------------------
newtype LinkData =
    LinkData {
      email :: String
    , organization :: String
    , token :: String
    , unsubscription_link :: String
    , subscription_link :: String
    , created_at :: String
    , click_events :: Array ClickEventData
    }

derive instance genericLinkData :: Generic LinkData

--------------------------------------------------------------------------------
_LinkData :: Prism' LinkData { email :: String, organization :: String, token :: String, unsubscription_link :: String, subscription_link :: String, created_at :: String, click_events :: Array ClickEventData}
_LinkData = prism' LinkData f
  where
    f (LinkData r) = Just r


--------------------------------------------------------------------------------
